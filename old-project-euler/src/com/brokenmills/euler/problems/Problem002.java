package com.brokenmills.euler.problems;

/**
 * Each new term in the Fibonacci sequence is generated by adding the previous two terms. By
 * starting with 1 and 2, the first 10 terms will be:
 * 
 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 * 
 * By considering the terms in the Fibonacci sequence whose values do not exceed four million, find
 * the sum of the even-valued terms.
 * 
 * @author vlad.moraru
 */
public class Problem002 implements ProblemInterface {

  /**
   * @see euler.run.ProblemInterface#run(java.lang.String[])
   */
  public void run(String[] args) {
    int MAX = 4000000; // four million
    boolean escape = false;
    int anchor1 = 0;
    int anchor2 = 1;
    int sum = 0;
    do {
      int term = anchor1 + anchor2;
      if (term >= MAX) {
        escape = true;
      } else {
        System.out.println(term);
        anchor1 = anchor2;
        anchor2 = term;
        if (term % 2 == 0) {
          sum += term;
        }
      }
    } while (!escape);
    System.out.println(sum);
  }

}
